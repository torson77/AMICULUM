/* MODULES
------------------------------------------ */
/* COLOURS - http://chir.ag/projects/name-that-color/
------------------------------------------ */
/* WEIGHTS
------------------------------------------ */
/* FALLBACK FONT
------------------------------------------ */
/* BASE FONTS
------------------------------------------ */
/* HEADER FONTS
------------------------------------------ */
/* PX TO REM
------------------------------------------ */
/* BREAKPOINT
------------------------------------------ */
/* SVG BG IMG FALLBACK
------------------------------------------ */
/* PX TO REM
------------------------------------------ */
/* BASE PARTIALS
------------------------------------------ */
body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

fieldset, img {
  border: 0; }

address, caption, cite, code, dfn, th, var {
  font-style: normal;
  font-weight: normal; }

ol, ul {
  list-style: none; }

caption, th {
  text-align: left; }

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal; }

q:before, q:after {
  content: ''; }

abbr, acronym {
  border: 0; }

article, aside, dialog, figure, footer, header, hgroup, nav, section {
  display: block;
  zoom: 1; }

audio, canvas, video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

*, *:before, *:after {
  box-sizing: border-box; }

html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  color: #333333;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-size: 1em;
  line-height: 1.4;
  margin: 0; }

.container {
  margin: 0 auto;
  width: 96%; }

@media only screen and (min-width: 73.125em) {
  .container {
    max-width: 73.125em;
    margin: 0 auto;
    width: 100%; } }

.row {
  overflow: hidden; }

/* BASE ELEMENTS
------------------------------------------ */
h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: bold;
  margin-bottom: 1em; }

h1, .h1 {
  font-size: 2em; }

h2, .h2 {
  font-size: 1.75em; }

h3, .h3 {
  font-size: 1.5em; }

h4, .h4 {
  font-size: 1.4em; }

h5, .h5 {
  font-size: 1.3em; }

h6, .h6 {
  font-size: 1.2em; }

small {
  font-size: 0.85em; }

ul li {
  list-style: none; }

ol li {
  list-style: none; }

strong, b {
  font-weight: bold; }

em, i {
  font-style: italic; }

p {
  margin-bottom: 1em; }

img, object, embed {
  height: auto;
  max-width: 100%; }

/* LINKS
------------------------------------------ */
a {
  color: #d8544b;
  cursor: pointer;
  text-decoration: none;
  transition: color 0.3s ease;
  outline: 0;
  /* Improve readability when focused and hovered in all browsers: h5bp.com/h */ }

a:hover {
  color: #e2766f; }

a:focus, a:active {
  outline: none; }

/* BUILD ELEMENTS
------------------------------------------ */
.hide {
  display: none; }

.center-align {
  text-align: center; }

/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.cf {
  *zoom: 1; }

input,
textarea {
  margin: 0 0 1em;
  padding: 1em;
  width: 100%; }

input[type=submit] {
  border: none; }

/* SMALL/DEFAULT
------------------------------------------ */
.one_twelve, .two_twelve, .three_twelve, .four_twelve,
.five_twelve, .six_twelve, .seven_twelve, .eight_twelve,
.nine_twelve, .ten_twelve, .eleven_twelve, .twelve_twelve {
  margin: 0 0 0.625em 0;
  padding: 1px 0.5%;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }

/* MEDIUM BREAKPOINT
------------------------------------------ */
@media only screen and (min-width: 50em) {
  .one_twelve {
    width: 6.77966%;
    float: left;
    margin-right: 1.69492%; }
  .two_twelve {
    width: 15.25424%;
    float: left;
    margin-right: 1.69492%; }
  .three_twelve {
    width: 23.72881%;
    float: left;
    margin-right: 1.69492%; }
  .four_twelve {
    width: 32.20339%;
    float: left;
    margin-right: 1.69492%; }
  .five_twelve {
    width: 40.67797%;
    float: left;
    margin-right: 1.69492%; }
  .six_twelve {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
  .seven_twelve {
    width: 57.62712%;
    float: left;
    margin-right: 1.69492%; }
  .eight_twelve {
    width: 66.10169%;
    float: left;
    margin-right: 1.69492%; }
  .nine_twelve {
    width: 74.57627%;
    float: left;
    margin-right: 1.69492%; }
  .ten_twelve {
    width: 83.05085%;
    float: left;
    margin-right: 1.69492%; }
  .eleven_twelve {
    width: 91.52542%;
    float: left;
    margin-right: 1.69492%; }
  .twelve_twelve {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
  .end-grid {
    float: right;
    margin-right: 0; } }

/* LARGE BREAKPOINT
------------------------------------------ */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
