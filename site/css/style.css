@charset "UTF-8";
/* MODULES
------------------------------------------ */
/* COLOURS - http://chir.ag/projects/name-that-color/
------------------------------------------ */
/* WEIGHTS
------------------------------------------ */
/* FALLBACK FONT
------------------------------------------ */
/* BASE FONTS
------------------------------------------ */
/* HEADER FONTS
------------------------------------------ */
/* PX TO REM
------------------------------------------ */
/* BREAKPOINT
------------------------------------------ */
/* SVG BG IMG FALLBACK
------------------------------------------ */
/* PX TO REM
------------------------------------------ */
/* BASE PARTIALS
------------------------------------------ */
/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -khtml-user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  display: block;
  overflow: hidden;
  margin: 0;
  padding: 0; }

.slick-list:focus {
  outline: none; }

.slick-list.dragging {
  cursor: pointer;
  cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  top: 0;
  left: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }

.slick-track:before,
.slick-track:after {
  display: table;
  content: ''; }

.slick-track:after {
  clear: both; }

.slick-loading .slick-track {
  visibility: hidden; }

.slick-slide {
  display: none;
  float: left;
  height: 100%;
  min-height: 1px; }

[dir='rtl'] .slick-slide {
  float: right; }

.slick-slide img {
  display: block; }

.slick-slide.slick-loading img {
  display: none; }

.slick-slide.dragging img {
  pointer-events: none; }

.slick-initialized .slick-slide {
  display: block; }

.slick-loading .slick-slide {
  visibility: hidden; }

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

/* Slider */
.slick-loading .slick-list {
  background: #fff url("../img/ajax-loader.gif") center center no-repeat; }

/* Icons */
@font-face {
  font-family: "slick";
  src: url("../fonts/slick.eot");
  src: url("../fonts/slick.eot?#iefix") format("embedded-opentype"), url("../fonts/slick.woff") format("woff"), url("../fonts/slick.ttf") format("truetype"), url("../fonts/slick.svg#slick") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Arrows */
.slick-prev,
.slick-next {
  position: absolute;
  display: block;
  height: 20px;
  width: 20px;
  line-height: 0px;
  font-size: 0px;
  cursor: pointer;
  background: transparent;
  color: transparent;
  top: 50%;
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
  padding: 0;
  border: none;
  outline: none;
  z-index: 2; }

.slick-prev:hover, .slick-prev:focus,
.slick-next:hover,
.slick-next:focus {
  outline: none;
  background: transparent;
  color: transparent; }

.slick-prev:hover:before, .slick-prev:focus:before,
.slick-next:hover:before,
.slick-next:focus:before {
  opacity: 1; }

.slick-prev.slick-disabled:before,
.slick-next.slick-disabled:before {
  opacity: 0.25; }

.slick-prev:before,
.slick-next:before {
  font-family: "slick";
  font-size: 20px;
  line-height: 1;
  color: white;
  opacity: 0.75;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.slick-prev {
  left: 2%; }

[dir="rtl"] .slick-prev {
  left: auto;
  right: 2%; }

.slick-prev:before {
  content: "←"; }

[dir="rtl"] .slick-prev:before {
  content: "→"; }

.slick-next {
  right: 2%; }

[dir="rtl"] .slick-next {
  left: 2%;
  right: auto; }

.slick-next:before {
  content: "→"; }

[dir="rtl"] .slick-next:before {
  content: "←"; }

/* Dots */
.slick-dotted.slick-slider {
  margin-bottom: 30px; }

.slick-dots {
  position: absolute;
  bottom: -25px;
  list-style: none;
  display: block;
  text-align: center;
  padding: 0;
  margin: 0;
  width: 100%; }

.slick-dots li {
  position: relative;
  display: inline-block;
  height: 20px;
  width: 20px;
  margin: 0 5px;
  padding: 0;
  cursor: pointer; }

.slick-dots li button {
  border: 0;
  background: transparent;
  display: block;
  height: 20px;
  width: 20px;
  outline: none;
  line-height: 0px;
  font-size: 0px;
  color: transparent;
  padding: 5px;
  cursor: pointer; }

.slick-dots li button:hover, .slick-dots li button:focus {
  outline: none; }

.slick-dots li button:hover:before, .slick-dots li button:focus:before {
  opacity: 1; }

.slick-dots li button:before {
  position: absolute;
  top: 0;
  left: 0;
  content: "•";
  width: 20px;
  height: 20px;
  font-family: "slick";
  font-size: 6px;
  line-height: 20px;
  text-align: center;
  color: #ffffff;
  opacity: 0.25;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.slick-dots li.slick-active button:before {
  color: #ffffff;
  opacity: 0.75; }

body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

fieldset, img {
  border: 0; }

address, caption, cite, code, dfn, th, var {
  font-style: normal;
  font-weight: normal; }

ol, ul {
  list-style: none; }

caption, th {
  text-align: left; }

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal; }

q:before, q:after {
  content: ''; }

abbr, acronym {
  border: 0; }

article, aside, dialog, figure, footer, header, hgroup, nav, section {
  display: block;
  zoom: 1; }

audio, canvas, video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

*, *:before, *:after {
  box-sizing: border-box; }

html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  background-color: #1a1a1a;
  color: #333333;
  font-family: Verdana, Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-size: 1em;
  line-height: 1.4;
  margin: 0; }

.container {
  margin: 0 auto;
  width: 96%; }

@media only screen and (min-width: 73.125em) {
  .container {
    max-width: 73.125em;
    margin: 0 auto;
    width: 100%; } }

.row {
  overflow: hidden; }

/* BASE ELEMENTS
------------------------------------------ */
h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: Verdana, Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: bold;
  margin-bottom: 1em; }

h1, .h1 {
  font-size: 2em; }

h2, .h2 {
  font-size: 1.75em; }

h3, .h3 {
  font-size: 1.5em; }

h4, .h4 {
  font-size: 1.4em; }

h5, .h5 {
  font-size: 1.3em; }

h6, .h6 {
  font-size: 1.2em; }

small {
  font-size: 0.85em; }

ul li {
  list-style: none; }

ol li {
  list-style: none; }

strong, b {
  font-weight: bold; }

em, i {
  font-style: italic; }

p {
  margin-bottom: 1em; }

img, object, embed {
  height: auto;
  max-width: 100%; }

/* LINKS
------------------------------------------ */
a {
  color: #d8544b;
  cursor: pointer;
  text-decoration: none;
  transition: color 0.3s ease;
  outline: 0;
  /* Improve readability when focused and hovered in all browsers: h5bp.com/h */ }

a:hover {
  color: #e2766f; }

a:focus, a:active {
  outline: none; }

/* BUILD ELEMENTS
------------------------------------------ */
.hide {
  display: none; }

.center-align {
  text-align: center; }

/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.cf {
  *zoom: 1; }

.btn {
  border: 2px solid #ffffff;
  color: #ffffff;
  display: block;
  max-width: 260px;
  margin: 1rem auto;
  padding: 1rem 2rem;
  text-transform: uppercase;
  text-align: center; }

input,
textarea {
  margin: 0 0 1em;
  padding: 1em;
  width: 100%; }

input[type=submit] {
  border: none; }

/* SMALL/DEFAULT
------------------------------------------ */
.one_twelve, .two_twelve, .three_twelve, .four_twelve,
.five_twelve, .six_twelve, .seven_twelve, .eight_twelve,
.nine_twelve, .ten_twelve, .eleven_twelve, .twelve_twelve {
  margin: 0 0 0.625em 0;
  padding: 1px 0.5%;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }

/* MEDIUM BREAKPOINT
------------------------------------------ */
@media only screen and (min-width: 50em) {
  .one_twelve {
    width: 6.77966%;
    float: left;
    margin-right: 1.69492%; }
  .two_twelve {
    width: 15.25424%;
    float: left;
    margin-right: 1.69492%; }
  .three_twelve {
    width: 23.72881%;
    float: left;
    margin-right: 1.69492%; }
  .four_twelve {
    width: 32.20339%;
    float: left;
    margin-right: 1.69492%; }
  .five_twelve {
    width: 40.67797%;
    float: left;
    margin-right: 1.69492%; }
  .six_twelve {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
  .seven_twelve {
    width: 57.62712%;
    float: left;
    margin-right: 1.69492%; }
  .eight_twelve {
    width: 66.10169%;
    float: left;
    margin-right: 1.69492%; }
  .nine_twelve {
    width: 74.57627%;
    float: left;
    margin-right: 1.69492%; }
  .ten_twelve {
    width: 83.05085%;
    float: left;
    margin-right: 1.69492%; }
  .eleven_twelve {
    width: 91.52542%;
    float: left;
    margin-right: 1.69492%; }
  .twelve_twelve {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
  .end-grid {
    float: right;
    margin-right: 0; } }

/* LARGE BREAKPOINT
------------------------------------------ */
.flex {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: space-evenly;
      justify-content: space-evenly; }

.footer {
  position: relative;
  width: 100%; }

.footer__wrapper {
  max-width: 300px;
  margin: 0 auto;
  position: relative; }

.footer__wrapper:before {
  background-color: rgba(158, 158, 158, 0.2);
  content: "";
  height: 2px;
  left: 50%;
  position: absolute;
  top: 0;
  -ms-transform: translateX(-50%);
      transform: translateX(-50%);
  width: 50%; }

.footer__copy {
  color: rgba(158, 158, 158, 0.2);
  font-size: .8rem;
  padding: 1rem;
  text-transform: uppercase;
  text-align: center; }

.header {
  color: #ffffff;
  padding: 1rem;
  width: 100%; }

@media only screen and (min-width: 50em) {
  .header {
    padding: 1rem 0; } }

.header__block {
  display: block;
  text-align: center;
  margin: 1rem auto;
  width: 100%; }

@media only screen and (min-width: 50em) {
  .header__block {
    display: inline-block;
    max-width: 47%;
    margin: 0 1% 0 0;
    vertical-align: middle;
    text-align: left; } }

@media only screen and (min-width: 50em) {
  .header__block--branding {
    text-align: right;
    margin-left: 2%; } }

.header__title {
  color: inherit;
  font-weight: normal;
  font-size: 1.4rem;
  margin: 0;
  text-transform: uppercase; }

@media only screen and (min-width: 50em) {
  .header__title {
    font-size: 2rem; } }

.header__logo {
  background-color: #2e2e2e;
  padding: 1rem 1.4rem;
  text-transform: uppercase;
  width: 100%;
  height: 100%; }

.modal__element {
  position: relative;
  z-index: 1; }

.modal__button {
  background-color: #2e2e2e;
  border: 1px solid #ffffff;
  color: #ffffff;
  cursor: pointer;
  height: 100%;
  min-height: 50px;
  min-width: 50px;
  max-height: 50px;
  max-width: 50px;
  position: absolute;
  top: 2%;
  transition: background 0.3s ease;
  right: 2%;
  width: 100%; }

.modal__button:hover {
  background-color: #9e9e9e; }

.modal__button--close {
  background-color: #ffffff;
  color: #2e2e2e;
  border: 2px solid #1a1a1a; }

.modal__button-line {
  background-color: #ffffff;
  border-radius: 5px;
  height: 2px;
  position: absolute;
  width: 100%; }

.modal__button-inner {
  font-size: 1.4rem; }

.modal__button-inner--close {
  line-height: .6; }

.modal__popup {
  background-color: rgba(26, 26, 26, 0.8);
  bottom: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 5; }

.modal__popup-inner {
  background-color: #ffffff;
  color: #2e2e2e;
  left: 50%;
  max-width: 800px;
  padding: 2rem;
  position: absolute;
  top: 50%;
  -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
  text-align: center;
  width: 90%; }

.section {
  color: #ffffff;
  padding: 2rem 1rem; }

@media only screen and (min-width: 50em) {
  .section {
    padding: 4rem 0; } }

.section--intro {
  text-align: center; }

.section--breakout {
  background-color: #ffffff;
  color: #9e9e9e; }

.section--topics {
  border-top: 1px solid rgba(158, 158, 158, 0.4); }

.section__copy--parent {
  max-width: 90%;
  margin: 0 auto; }

.section__copy--center {
  text-align: center; }

.section__title {
  margin: 0 auto;
  font-size: 3rem;
  text-transform: uppercase;
  text-align: center;
  letter-spacing: 2px; }

@media only screen and (min-width: 50em) {
  .section__title {
    font-size: 5rem; } }

.section__title--topic {
  font-size: 1rem;
  margin-bottom: .4rem; }

.section__title--sub {
  font-size: 1rem;
  margin-bottom: 2rem; }

.section__title--sub span {
  text-transform: lowercase; }

.section__title--modal {
  font-size: 2rem;
  margin-bottom: 1rem; }

.section__title--small {
  font-size: 1.4rem;
  margin-bottom: 1rem; }

@media only screen and (min-width: 50em) {
  .section__title--small {
    text-align: left; } }

.section__title--small-center {
  font-size: 1.4rem;
  margin-bottom: 1rem;
  text-align: center; }

.section__hide {
  display: none !important; }

.section__hide.active {
  display: block; }

.section__grid {
  width: 100%; }

@media only screen and (min-width: 50em) {
  .section__grid {
    max-width: 48%; } }

@media only screen and (min-width: 50em) {
  .section__grid--breakout {
    margin-right: 2%;
    max-width: 47%; } }

.section__wrapper {
  margin: 0 auto 2rem;
  text-align: center; }

.section__list-item {
  margin: 1rem 0;
  width: 100%; }

.section__list-item:first-child {
  margin-top: 0; }

@media only screen and (min-width: 50em) {
  .section__list-item {
    float: left;
    margin: 1%;
    width: 31.333333%; }
  .section__list-item:first-child {
    margin-left: 0; }
  .section__list-item:last-child {
    margin-right: 0; } }

@media only screen and (min-width: 73.125em) {
  .section__list-item {
    width: 23.33333%; } }

.section__list-image-box {
  background-color: #9e9e9e;
  height: 160px;
  margin-bottom: 1rem;
  width: 100%; }

.slider__inner {
  background-color: #2e2e2e;
  color: #ffffff;
  padding: 10rem 2rem;
  text-align: center;
  text-transform: uppercase;
  width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
